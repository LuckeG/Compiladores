#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Full
Input = Stream
Parser = SLR
#RegularDefinitions
LETRA: [a-zA-Z]
CARACTERES: [^\t]
DIGITO: [0-9]
TIPO: "int" | "string"
OP:  "+" | "-" | "/" | "*"
COMENT: "#"
OPELOGIC: "<" | ">" | "==" | "!=" | "<=" | ">=" | "!" | "||" | "&" | "(" | ")"
ATRIBU: "="
MARCADOR: """"
ESCREVA: escreva
LEIA: leia

#Tokens
//operadores
"("
")"
","
//token
INI: "INICIO"
FIM: "FIM"
ESCREVA: {ESCREVA}
LEIA: {LEIA}
ID: {LETRA} ( {LETRA} | {DIGITO} )*
ATRIBUTO: {TIPO}

IF = ID: "if"
ELSE = ID: "else"
ELIF = ID: "elif"
FOR = ID: "id"
WHILE = ID: "while"
FUNCAO = ID: "function"

//ATRIBUiCAO: {TIPO} ({LETRA} ( {LETRA} | {DIGITO} )*) {ATRIBU} ( {LETRA} | {DIGITO} )*
INT: {DIGITO}+
STRING: {MARCADOR} {CARACTERES}* {MARCADOR}
FLOAT: {DIGITO}+.{DIGITO}+
OPERADOR: {OP}*
COMENTARIO: {COMENT} ( {LETRA}* | {DIGITO}* )?
LOGICO: {OPELOGIC}
ATRIBUICAO: {ATRIBU}



// ignorar
: [" "\t\n\r]*
#NonTerminals
<START>
<COD>
<IN>
<OUT>
<E>
#Grammar
<START>::= INI <COD> FIM;

<COD>::= <IN><COD>
	|<OUT><COD>
	|<E><COD>
	|<IN>
	|<OUT>
	|<E>;

<IN>::= ESCREVA | LEIA;

<OUT>::= STRING "," <OUT>
	| ID "," <OU
	| STRING
	| ID;

<E>::= <E> OPERADOR <E>;
              | ID;



